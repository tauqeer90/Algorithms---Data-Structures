 // private void deprecatedMainFunction()
  // {
  //   System.out.println("Hello world!");

  //   Stack stack = new Stack(10); stack.push(2); stack.push(3);
  //   System.out.println(stack.pop()); System.out.println(stack.peek());
  //   System.out.println(stack.isEmpty()); System.out.println(stack.pop());
  //   System.out.println(stack.isEmpty());

  //   GenericStack genericStack = new GenericStack<Character>(10);
  //   genericStack.push('T'); System.out.println(genericStack.pop());
  //   System.out.println(genericStack.pop());


  //   System.out.println(reverseString("Tauqeer"));
  //   System.out.println(sameString("Tauqeer"));

  //   GenericQueue queue = new GenericQueue<Integer>(3);
  //   queue.push(2);
  //   queue.push(3);
  //   queue.push(4);
  //   System.out.println(queue.pop());
  //   System.out.println(queue.pop());
  //   System.out.println(queue.pop());
  //   queue.push(2);
  //   System.out.println(queue.pop());
  //   queue.push(3);
  //   queue.push(4);
  //   System.out.println(queue.pop());
  //   System.out.println(queue.pop());
  // }


//NODE
  // Node nodeA = new Node(1);
  // Node nodeB = new Node(2);
  // nodeA.nextNode = nodeB;
  // System.out.println("LinkedList Length: " + getLinkedListLength(nodeA));



    SinglyLinkedList linkedList = new SinglyLinkedList();
    linkedList.insertFirstNode(3);
    linkedList.insertFirstNode(2);
    linkedList.insertFirstNode(1);
    linkedList.printFirstToLastNodes();
    linkedList.deleteFirstNode();
    linkedList.printFirstToLastNodes();
    linkedList.insertLastNode(4);
    linkedList.printFirstToLastNodes();
    Node nodeA = new Node(10);
    Node nodeB = new Node(20);
    nodeA.nextNode = nodeB;
    linkedList.insertFirstNode(nodeA);
    linkedList.printFirstToLastNodes();



// DOUBLE LINKEDLIST
    DoublyLinkedList linkedList = new DoublyLinkedList();
    linkedList.insertFirstNode(3);
    linkedList.insertFirstNode(2);
    linkedList.insertFirstNode(1);
    linkedList.insertLastNode(4);
    linkedList.insertFirstNode(0);
    linkedList.insertAfter(0, 15);
    linkedList.printFirstToLastNodes();
    linkedList.printlastToFirst();
    linkedList.insertAfter(2, 20);
    linkedList.insertAfter(4, 40);
    linkedList.printFirstToLastNodes();
    linkedList.insertAfter(6, 60);
    linkedList.printFirstToLastNodes();
    linkedList.printlastToFirst();